name: Deploy to Production

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy RRCompanion
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: '2.4.3'

      - name: Validate Backend
        run: |
          echo "🔍 Validating backend configuration..."
          cd apps/api
          deno check src/main.ts
          echo "✅ Backend validation passed"

      - name: Install Dependencies
        run: |
          echo "📦 Installing dependencies from root..."
          npm ci
          echo "✅ Dependencies installed successfully"

      # Temporarily disabled due to ESLint dependency resolution issues
      # - name: Validate Frontend
      #   run: |
      #     echo "🔍 Validating frontend configuration..."
      #     npm run lint --workspace=apps/web
      #     echo "✅ Frontend validation passed"

      - name: Build frontend
        run: |
          echo "🔨 Building frontend..."
          cd apps/web
          npm run build
          echo "✅ Frontend built successfully"
        env:
          VITE_STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
          VITE_API_BASE_URL: ${{ secrets.API_BASE_URL }}

      - name: Copy to Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: "apps/web/dist"
          target: "/var/www/rrcompanion/apps/web"
          strip_components: 2

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            set -e  # Exit on any error
            echo "🚀 Starting RRCompanion simple deployment..."
            cd /var/www/rrcompanion
            echo "📥 Pulling latest changes..."
            git pull origin master
            echo "🔄 Executing simple deployment..."
            chmod +x scripts/deploy.sh
            ./scripts/deploy.sh
            echo "🎉 Simple deployment completed successfully!"
            echo "📊 Service Status:"
            sudo systemctl status rrcompanion-api --no-pager

  health-check:
    name: Health Check
    runs-on: ubuntu-latest
    needs: deploy
    
    steps:
      - name: Wait for services to start
        run: sleep 45

      - name: Check Backend Health
        run: |
          echo "🔍 Checking backend health..."
          for i in {1..5}; do
            if curl -f ${{ secrets.BACKEND_URL }}/health; then
              echo "✅ Backend is healthy!"
              break
            else
              echo "⏳ Backend not ready yet, attempt $i/5..."
              if [ $i -eq 5 ]; then
                echo "❌ Backend health check failed after 5 attempts"
                exit 1
              fi
              sleep 10
            fi
          done

      - name: Check Frontend
        run: |
          echo "🔍 Checking frontend..."
          for i in {1..3}; do
            if curl -f ${{ secrets.FRONTEND_URL }}; then
              echo "✅ Frontend is accessible!"
              break
            else
              echo "⏳ Frontend not ready yet, attempt $i/3..."
              if [ $i -eq 3 ]; then
                echo "❌ Frontend check failed after 3 attempts"
                exit 1
              fi
              sleep 5
            fi
          done

      - name: Deployment Summary
        run: |
          echo "🎉 Blue-green deployment completed successfully!"
          echo "Backend: ${{ secrets.BACKEND_URL }}"
          echo "Frontend: ${{ secrets.FRONTEND_URL }}"
          echo "Health Check: ${{ secrets.BACKEND_URL }}/health" 